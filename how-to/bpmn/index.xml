<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Write BPMN workflows on Rhize documentation</title><link>https://docs.rhize.com/how-to/bpmn/</link><description>Recent content in Write BPMN workflows on Rhize documentation</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 24 Apr 2024 19:35:09 +0300</lastBuildDate><atom:link href="https://docs.rhize.com/how-to/bpmn/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview: orchestrate processes</title><link>https://docs.rhize.com/how-to/bpmn/orchestration-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.rhize.com/how-to/bpmn/orchestration-overview/</guid><description>Rhize&amp;rsquo;s BPMN engine and UI provides a way to coordinate complex tasks and exchange messages between the Rhize platform and your internal services. For example, you can use BPMN to coordinate messages between systems, create alerts and events, transform incoming work orders into their ISA-95 representation, and store them in the Rhize DB.
Each workflow is configured through the same high-level process:
Set a start condition that initiates the workflow. This condition may be a value from a data source or MQTT message, a scheduled timer, or a button pressed in frontend app.</description></item><item><title>Create workflows</title><link>https://docs.rhize.com/how-to/bpmn/create-workflow/</link><pubDate>Fri, 22 Sep 2023 14:50:39 -0300</pubDate><guid>https://docs.rhize.com/how-to/bpmn/create-workflow/</guid><description>This topic shows you how to use the BPMN UI to create event-driven workflows. To view the full list of elements and their parameters, refer to BPMN elements.
Prerequisites To create a workflow, you&amp;rsquo;ll need:
An installed environment Topics to publish and subscribe to The ability to call the GraphQL API and understand JSON. General procedures Every workflow is different, but the overall procedure usually works like this:
Create a start event:</description></item><item><title>Trigger workflows</title><link>https://docs.rhize.com/how-to/bpmn/trigger-workflows/</link><pubDate>Wed, 24 Apr 2024 19:35:09 +0300</pubDate><guid>https://docs.rhize.com/how-to/bpmn/trigger-workflows/</guid><description>You also have multiple ways to start, or trigger, a BPMN workflow. The best choice of trigger depends on the context of the event and the system that initiates the workflow.
API triggers come from a GraphQL call to the Rhize DB. Message triggers subscribe to a topic on the Rhize broker and run whenever an event is published to that topic. Rule triggers subscribe to the topics on a remote data source, such as an edge OPC-UA server or MQTT broker.</description></item><item><title>Tune BPMN performance</title><link>https://docs.rhize.com/how-to/bpmn/tune-performance/</link><pubDate>Fri, 09 Feb 2024 09:47:47 -0300</pubDate><guid>https://docs.rhize.com/how-to/bpmn/tune-performance/</guid><description>This page documents some tips to debug BPMN workflows and improve their performance.
Manufacturing events can generate a vast amount of data. And a BPMN workflow can have any number of logical flows and data transformations. So an inefficient BPMN process can introduce performance degradations.
Manage the process context size Note The max size of the process variable context comes from the default max payload size of NATS Jetstreams. To increase this size, change your NATS configuration.</description></item><item><title>Naming conventions</title><link>https://docs.rhize.com/how-to/bpmn/naming-conventions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.rhize.com/how-to/bpmn/naming-conventions/</guid><description>Note These are recommendations. Your organization may adapt the conventions to its needs. Each BPMN workflow has an ID, as does each node in the workflow. Rhize recommends adopting a set of conventions about how you name these elements. Standardizing BPMN names across an environment has multiple benefits:
Consistent workflow naming conventions help you filter and find workflows in the process list. Well-named nodes make the workflow behavior easier to understand at a glance.</description></item><item><title>BMPN elements</title><link>https://docs.rhize.com/how-to/bpmn/bpmn-elements/</link><pubDate>Tue, 26 Sep 2023 11:10:37 -0300</pubDate><guid>https://docs.rhize.com/how-to/bpmn/bpmn-elements/</guid><description>This document describes the parameters available to each BPMN element in the Rhize UI. These parameters control how users set conditions, transform data, access variables, call services, and so on.
Rhize BPMN workflows conform to the visual grammar described in the OMG standard for Business Process Model and Notation. Each process is made of events (circles), activities (rectangles), gateways (diamonds), and flows (arrows). Some elements are extended for Rhize-specific features, such as service tasks that call the GraphQL API.</description></item></channel></rss>
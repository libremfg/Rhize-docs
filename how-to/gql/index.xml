<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Use GraphQL on Rhize documentation</title><link>https://docs.rhize.com/how-to/gql/</link><description>Recent content in Use GraphQL on Rhize documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 22 Nov 2023 09:43:30 -0300</lastBuildDate><atom:link href="https://docs.rhize.com/how-to/gql/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview: the Rhize API</title><link>https://docs.rhize.com/how-to/gql/call-the-graphql-api/</link><pubDate>Wed, 22 Nov 2023 09:43:30 -0300</pubDate><guid>https://docs.rhize.com/how-to/gql/call-the-graphql-api/</guid><description>In a manufacturing operation, all event data is interrelated. To make these relations explorable, Rhize stores data in a special-purpose graph database designed to represent all levels of the manufacturing process. This database is enforced by our ISA-95 schema, the most comprehensive data representation of ISA-95 in the world.
Rhize exposes this database through a GraphQL API. Unlike REST, GraphQL requires only one endpoint, and you can define exactly the data that you return for each operation.</description></item><item><title>Query</title><link>https://docs.rhize.com/how-to/gql/query/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.rhize.com/how-to/gql/query/</guid><description>A query returns one or more resources from the database. Whether you want to investigate manufacturing processes or build a custom report, a good query is likely the foundation of your workflow.
Most queries start with these three verbs, each of which indicates the resources to return.
get for a single resource query for multiple resources aggregate for calculations on arrays Note These operations correspond to the Get verb defined in Part 5 of the ISA-95 standard.</description></item><item><title>Filter</title><link>https://docs.rhize.com/how-to/gql/filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.rhize.com/how-to/gql/filter/</guid><description>Filters limit an operation to a subset of resources. You can use filters to make operations more precise, remove unneeded items from a payload, and reduce the need for secondary processing.
To use a filter, specify it in the operation&amp;rsquo;s argument. Most fields in an object can serve as a filter. Note This page provides a detailed guide of how to use the filters, with examples. For a bare reference of filters and data types, refer to the GraphQL type reference.</description></item><item><title>Mutate</title><link>https://docs.rhize.com/how-to/gql/mutate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.rhize.com/how-to/gql/mutate/</guid><description>Mutations change the database in someway by creating, updating, or deleting a resource. You might use a mutation to update a personnel class, or in to a BPMN workflow that automatically creates records of incoming material lots.
Rhize supports the following ways to change the API.
add Note The add operation corresponds to the Process verb defined in Part 5 of the ISA-95 standard. Mutations that start with add create a resource on the server.</description></item><item><title>Subscribe</title><link>https://docs.rhize.com/how-to/gql/subscribe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.rhize.com/how-to/gql/subscribe/</guid><description>The operations for a subscription are similar to the operations for a query. But rather than providing information about the entire item, the purpose of subscriptions is to notify about real-time changes to a manufacturing resource.
Note These operations correspond to the SyncGet verb defined in Part 5 of the ISA-95 standard. This example query subscribes to changes in a specified set of workResponses, reporting only their id and effective end time.</description></item></channel></rss>